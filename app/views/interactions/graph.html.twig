<!DOCTYPE html>
<html>
<head>
    {% block head %}
        {% include 'layout/head.html.twig' %}
    {% endblock %}
    <script type="text/javascript" src="http://visjs.org/dist/vis.js"></script>
    <link href="http://visjs.org/dist/vis-network.min.css" rel="stylesheet" type="text/css" />

    <style type="text/css">
        #graph {
            width: 100%;
            height: 600px;

        }
    </style>

</head>
<body>
{% block header %}
    {% include 'layout/header.html.twig' %}
{% endblock %}

{% block navbar %}
    {% include 'layout/navbar.html.twig' %}
{% endblock %}

<div class="container-fluid">
    <div class="row">
        <div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">
            <h3 class="page-header">{{ id |capitalize }} graph</h3>

            {% block ranking_row_filters %}
                {% include 'interactions/interactions.html.twig' %}
            {% endblock %}

            {% block sidebar %}
                {% include 'layout/sidebar.html.twig' %}
            {% endblock %}

            {% if not startDate or not endDate %}
                <br>
                <div class="alert alert-warning">
                    <strong>No results</strong> You must select a valid start and end date ¡¡¡
                </div>

            {% else %}
            <div id="graph"></div>
            <script type="text/javascript">

                $.get('/api/graph/{{ id }}?startDate={{ startDate }}&endDate={{ endDate }}&userlist={{ userlist }}', function( data ) {
                    var nodes = [];
                    var edges = [];
                    var network = null;

                    dataParsed = jQuery.parseJSON(data);

                    dataParsed.nodes.forEach(function(element) {
                        nodes.push({
                            id:element.id,
                            image:element.avatar_url,
                            label:element.username,
                            value:element.participations,
                            shape:"circularImage"
                        })
                    });

                    dataParsed.relations.forEach(function(element) {
                        edges.push({
                            from:element.userFrom,
                            to:element.userTo,
                            arrows:'to',
                            label:element.value
                        })
                    });


                    // create a network
                    var container = document.getElementById('graph');

                    var options = {
                        autoResize: true,
                        height: '100%',
                        width: '100%',
                        nodes: {
                            shape: 'dot',
                            scaling: {
                                min: 80,
                                max: 180
                            },
                            font: {
                                size: 52,
                                face: 'Tahoma',
                            }
                        },
                        edges: {
                            color:
                                    {% if id == 'approval' %}
                                        'green'
                                    {% elseif id == 'changes' %}
                                        'red'
                                    {% elseif id == 'participation' %}
                                        'blue'
                                    {% endif %},
                            width: 0.15,
                            smooth: {
                                type: 'continuous'
                            },
                            font: {
                                size: 52,
                                face: 'Tahoma',
                                color: 'black'
                            }
                        },
                        interaction: {
                            hideEdgesOnDrag: true,
                            tooltipDelay: 200
                        },
                        physics:{
                            enabled: true,
                            hierarchicalRepulsion: {
                                centralGravity: 0.0,
                                springLength: 500,
                                springConstant: 0,
                                nodeDistance: 400,
                                damping: 0.09
                            },
                            solver: 'hierarchicalRepulsion'
                        }
                    };

                    var visData = {nodes:nodes, edges:edges};

                    network = new vis.Network(container, visData, options);
                });

            </script>
            {% endif %}
        </div>
    </div>
</div>

<footer>
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2">
                {% include 'layout/footer.html.twig' %}
            </div>
        </div>
    </div>
</footer>

</body>
<script>
    $(document).ready(function(){
        $('#{{ id }}-graph').addClass('active');
    });
</script>
</html>
